admin:
  access_log_path: "/tmp/admin_access.log"
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - name: listener_http
    address:
      socket_address: { address: 0.0.0.0, port_value: 10000 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/service/user", query_parameters: [{ name: "id", string_match: { safe_regex: { google_re2: {}, regex: ".*" } } }] }
                route:
                  cluster: user_service_grpc
                  max_grpc_timeout: 0s
              - match: { prefix: "/service/search", query_parameters: [{ name: "q", string_match: { safe_regex: { google_re2: {}, regex: ".*" } } }] }
                route:
                  cluster: search_service_grpc
                  max_grpc_timeout: 0s
              - match:
                prefix: "/service/example"  # The REST endpoint.
                headers:
                  - name: ":method"
                    exact_match: "POST"
          http_filters:
          - name: envoy.filters.http.router
            typed_config: {}
          - name: envoy.filters.http.grpc_http1_reverse_bridge
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3.FilterConfig
              content_type: 'application/grpc+proto'
              withhold_grpc_frames: true

  clusters:
  - name: user_service_grpc
    connect_timeout: 0.25s
    type: logical_dns
    # This cluster is a gRPC service (as indicated by the grpc protocol option).
    http2_protocol_options: {}
    load_assignment:
      cluster_name: user_service_grpc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: user_service_host
                port_value: user_service_port
  - name: search_service_grpc
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    load_assignment:
      cluster_name: search_service_grpc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: search_service_host
                port_value: search_service_port
 - name: example_service_grpc
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}  # This specifies that this cluster is a gRPC server.
    load_assignment:
      cluster_name: example_service_grpc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: grpc_service_host  # The gRPC service hostname.
                port_value: grpc_service_port  # The gRPC service port.